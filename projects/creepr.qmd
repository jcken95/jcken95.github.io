---
  title: "creepr"
  subtitle: ""
  description: "It's just beepr but creepy"
  format: html
  date: 11-09-2022
  about:
    template: marquee
---

##  The prequel: {beepr}

I *really like* {beepr}. For the uninitiated, the usage is simply

```{r}
#| echo: true
#| eval: false
beepr::beep()
```
 
and the result of this code snippet is a beep. Literally a solitary beep. Quite useful when you have a medium length bit of code and want some kind of indication when it has finished. There are a handful of additional noises that can be accessed by placing a number in the function call.

These noises are all *fine*. But that's it, they're just *fine*. They're not shocking, jarring, chilling or creepy. Where's the fun in that?

Turns out, if you do a bit of digging, the {beepr} package provides you with the functionality to play any `.wav` file that's on your machine. This can be done with

```{r}
#| echo: true
#| eval: false
beepr:::play_file("/path/to/noise.wav")
```

That got me thinking. If I could collated some creepy `.wav` files I could _probably_ make a creepy version of {beepr} before Halloween. Probably became a reality and in fact, going from this stupid idea to a working package only took a couple of hours (and I'd forgotten how to make a package). 

## Get creeping

I've put the package on github, thus you can install and run {creepr} in the following way

```{r}
#| echo: true
#| eval: false
devtools::install_github("https://github.com/jcken95/creepr")
creepr::creepr()
```

This will play a sound from my collated sounds at random. I've (to date) included a whopping 8 creepy sounds: "creature", "eerie", "intense", "laugh", "piano", "piano2", "ringing" and "strings". 

A feature of this package is that, even if you close R whilst the sound is playing, the sound __will not__ terminate with R. If you play a sound, then you're committed to it. It's like tops 15 seconds.

Happy creeping!
